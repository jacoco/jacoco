/*******************************************************************************
 * Copyright (c) 2009, 2013 Mountainminds GmbH & Co. KG and Contributors
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Evgeny Mandrikov - initial API and implementation
 *    Kyle Lieber - implementation of CheckMojo
 *
 *******************************************************************************/
import java.io.*;
import org.codehaus.plexus.util.*;

File surefireReport= new File( basedir, "target/site/jacoco/surefire/default/index.html" );
if( !surefireReport.exists() ) {
    throw new RuntimeException( "No report generated for surefire coverage" );
}

File failsafeReport= new File( basedir, "target/site/jacoco/failsafe/default/index.html" );
if( !failsafeReport.exists() ) {
    throw new RuntimeException( "No report generated for failsafe coverage" );
}

String buildLog = FileUtils.fileRead( new File( basedir, "build.log" ) );
int surefireOffset = buildLog.indexOf( "check (surefire)" );
if ( surefireOffset < 0 ) {
    throw new RuntimeException( "Surefire coverage checks were not run." );
}

int failsafeOffset = buildLog.indexOf( "check (failsafe)" );
if ( failsafeOffset < 0 ) {
    throw new RuntimeException( "Failsafe coverage checks were not run." );
}

if ( buildLog.substring(surefireOffset, failsafeOffset).indexOf( "All coverage checks have been met." ) < 0 ) {
    throw new RuntimeException( "Surefire coverage checks were not met." );
}

if ( buildLog.substring(failsafeOffset).indexOf( "All coverage checks have been met." ) < 0 ) {
    throw new RuntimeException( "Failsafe coverage checks were not met." );
}